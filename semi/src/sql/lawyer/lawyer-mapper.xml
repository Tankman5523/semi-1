<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">

<properties>

	<!-- 전체 변호사 리스트 조회 -->
	<entry key="selectList">
		SELECT LAW_NO,
		       USER_NAME,
		       PART_NAME,
		       COMPANY_NAME,
		       COMPANY_ADDRESS,
		       FILE_PATH||CHANGE_NAME "LAW_IMG"
		FROM LAW_USER L
		JOIN MEMBER M ON (L.REF_UNO = M.USER_NO)
		JOIN PART_CATEGORY P ON (L.REF_PNO = P.PART_NO)
		JOIN LAW_ATTACHMENT A ON (L.REF_UNO = A.REF_UNO)
		WHERE M.STATUS = 'Y'
		AND M.LAWYER = 'Y'
		ORDER BY LAW_NO DESC
	</entry>
	
	<!-- 전체 변호사 분야 조회 -->
	<entry key="selectPart">
		SELECT *
		FROM PART_CATEGORY
		ORDER BY PART_NO
	</entry>
	
	<!-- 조건으로 검색한 변호사 리스트 조회 -->
	<entry key="searchList">
		SELECT LAW_NO,
		       USER_NAME,
		       PART_NAME,
		       COMPANY_NAME,
		       COMPANY_ADDRESS,
		       FILE_PATH||CHANGE_NAME "LAW_IMG"
		FROM LAW_USER L
		JOIN MEMBER M ON (L.REF_UNO = M.USER_NO)
		JOIN PART_CATEGORY P ON (L.REF_PNO = P.PART_NO)
		JOIN LAW_ATTACHMENT A ON (L.REF_UNO = A.REF_UNO)
		WHERE M.STATUS = 'Y'
		AND M.LAWYER = 'Y'
		AND USER_NAME LIKE ?
		AND REF_PNO LIKE ?
		AND COMPANY_ADDRESS LIKE ?
	</entry>
	
	<!-- 선택된 변호사의 상세정보 -->
	<entry key="selectLawyer">
		SELECT LAW_NO,
		       USER_NAME,
		       PART_NAME,
		       EXAM,
		       EXAM_SESSION,
		       PASS_DATE,
		       COMPANY_NAME,
		       COMPANY_ADDRESS,
		       COMPANY_PN,
		       LAW_COMMENT,
		       CAREER,
		       FILE_PATH||CHANGE_NAME "LAW_IMG"
		FROM LAW_USER L
		JOIN MEMBER M ON (L.REF_UNO = M.USER_NO)
		JOIN PART_CATEGORY P ON (L.REF_PNO = P.PART_NO)
		JOIN LAW_ATTACHMENT A ON (L.REF_UNO = A.REF_UNO)
		WHERE M.STATUS = 'Y' <!-- 중복되는 조건 / 없어도 되는건지? -->
		AND LAW_NO = ?
	</entry>
	
	<!-- 현재 찜한 여부 체크 -->
	<entry key="dibsCheck">
		SELECT COUNT(*) "COUNT"
		FROM DIBS
		WHERE REF_LNO = ?
		AND REF_UNO = ?
	</entry>
	
	<!-- 찜하기 등록 -->
	<entry key="insertDibs">
		INSERT INTO DIBS VALUES(?,?)
	</entry>
	
	<!-- 찜하기 삭제 -->
	<entry key="deleteDibs">
		DELETE FROM DIBS
		WHERE REF_LNO = ?
		AND REF_UNO = ?
	</entry>
	
	<!-- 상담신청 등록 -->
	<entry key="insertCounsel">
		INSERT INTO COUNSEL(CS_NO,
							REF_LNO,
							CS_WRITER,
							CS_TITLE,
							CS_CONTENT)
		VALUES(SEQ_CSNO.NEXTVAL,?,?,?,?)
	</entry>
	
	<!-- 선택된 분야의 변호사 리스트 조회 (상담신청 폼) -->
	<entry key="partOptionChange">
		SELECT LAW_NO,
		       USER_NAME
		FROM LAW_USER 
		JOIN MEMBER ON (REF_UNO = USER_NO)
		JOIN PART_CATEGORY ON (REF_PNO = PART_NO)
		WHERE STATUS = 'Y'
		AND PART_NAME = ?
	</entry>
	
	<!-- 선택된 변호사의 분야 조회 (상담신청 폼) -->
	<entry key="lawOptionChange">
		SELECT PART_NO,
			   PART_NAME
		FROM PART_CATEGORY
		JOIN LAW_USER ON (PART_NO = REF_PNO)
		WHERE LAW_NO = ?
	</entry>
	
	<!-- 해당 변호사 리뷰 조회 -->
	<entry key="selectReviewList">
		SELECT REVIEW_NO,
		       REF_ANO,
		       REVIEW_CONTENT,
		       STAR,
		       USER_NO,
		       RPAD(SUBSTR(USER_ID,1,3),7,'*') "USER_ID"
		FROM LAW_REVIEW L 
		JOIN ACCIDENT A ON (REF_ANO = ACC_NO)
		JOIN BOARD B ON (REF_BNO = BOARD_NO)
		JOIN MEMBER M ON (BOARD_WRITER = USER_NO)
		WHERE L.STATUS = 'Y'
		AND A.SOLVE = 'Y'
		AND A.REF_LNO = ?
	</entry>
	
	<!-- 리뷰 작성 등록 -->
	<entry key="insertReview">
		INSERT INTO LAW_REVIEW VALUES(SEQ_RNO.NEXTVAL,?,?,?,DEFAULT)
	</entry>
	
	<!-- 상담 정보 조회 -->
	<entry key="selectCounsel">
		SELECT CS_NO,
		       REF_LNO,
		       CS_TITLE,
		       CS_CONTENT,
		       CS_ANSWER,
		       ACCEPT
		FROM COUNSEL
		WHERE STATUS = 'Y'
		<!-- AND ACCEPT = 'W' -->
		AND CS_NO = ?
	</entry>
	
	<!-- 상담 내용 수정 -->
	<entry key="updateCounsel">
		UPDATE COUNSEL
		SET CS_TITLE = ?,
		CS_CONTENT = ?
		WHERE STATUS = 'Y'
		AND ACCEPT = 'W'
		AND CS_NO = ?
	</entry>
	
	<!-- 상담내역 삭제 -->
	<entry key="deleteCounsel">
		DELETE COUNSEL
		WHERE CS_NO = ?
	</entry>
	
	<!-- 리뷰내역 삭제 -->
	<entry key="deleteReview">
		DELETE LAW_REVIEW
		WHERE REVIEW_NO = ?
	</entry>
	
	<!-- 상담 정보 조회 (변호사용) -->
	<entry key="selectCounselLaw">
		SELECT CS_NO,
		       REF_LNO,
		       USER_ID,
		       CS_TITLE,
		       CS_CONTENT,
		       CS_ANSWER,
		       ACCEPT
		FROM COUNSEL C
		JOIN MEMBER M ON (CS_WRITER = USER_NO)
		JOIN LAW_USER L ON (C.REF_LNO = LAW_NO)
		WHERE C.STATUS = 'Y'
		AND CS_NO = ?
	</entry>
	
	<!-- 상담 답변 등록 (수락) -->
	<entry key="updateAnswerAccept">
		UPDATE COUNSEL
		SET CS_ANSWER = ?
		WHERE STATUS = 'Y'
		AND ACCEPT = 'W'
		AND CS_NO = ?
	</entry>
	
	<!-- 상담 답변 등록 (거부) -->
	<entry key="updateAnswerDecline">
		UPDATE COUNSEL
		SET CS_ANSWER = ?,
		ACCEPT = 'N'
		WHERE STATUS = 'Y'
		AND CS_NO = ?
	</entry>
	
	<!-- 상담 수락 여부 (수락) (회원용) -->
	<entry key="updateAcceptAccept">
		UPDATE COUNSEL
		SET ACCEPT = 'Y'
		WHERE STATUS = 'Y'
		AND CS_NO = ?
	</entry>
	
	<!-- 상담 수락 여부 (거부) (회원용) -->
	<entry key="updateAcceptDecline">
        UPDATE COUNSEL
		SET ACCEPT = 'N'
		WHERE STATUS = 'Y'
		AND CS_NO = ?
	</entry>
	
	<!-- 상담 정보 조회 (변호사리뷰용) -->
	<entry key="selectAccident">
        SELECT ACC_NO,
        	   REF_LNO,
        	   TITLE
		FROM ACCIDENT A
		JOIN BOARD B ON (A.REF_BNO = B.BOARD_NO)
		WHERE A.SOLVE = 'Y'
		AND B.STATUS = 'Y'
		AND ACC_NO = ?
	</entry>
	
	<!-- 리뷰 상세보기 -->
	<entry key="selectReview">
		SELECT REVIEW_NO,
			   REF_ANO,
			   REVIEW_CONTENT,
			   STAR,
			   USER_NO,
			   USER_ID
		FROM LAW_REVIEW L 
		JOIN ACCIDENT A ON (REF_ANO = ACC_NO)
		JOIN BOARD B ON (REF_BNO = BOARD_NO)
		JOIN MEMBER M ON (BOARD_WRITER = USER_NO)
		WHERE L.STATUS = 'Y'
		AND A.SOLVE = 'Y'
		AND REVIEW_NO = ?
	</entry>
	
	<!-- 변호사 신청 내용 조회  -->
	<entry key="selectApply">
	SELECT LAW_NO, PART_NAME, EXAM,EXAM_SESSION, PASS_DATE, COMPANY_NAME, COMPANY_ADDRESS, COMPANY_PN,LAW_COMMENT, CAREER
	FROM LAW_USER
	JOIN PART_CATEGORY ON (PART_NO = REF_PNO)
	WHERE REF_UNO = ?
	</entry>
		
	<!-- 변호사 사진 조회 -->
	<entry key="selectLawAttachment">
	SELECT FILE_PATH || CHANGE_NAME "LAW_IMG"
	FROM LAW_ATTACHMENT
	WHERE REF_UNO =?
	</entry>
	
	<!-- =================================== 관리자용 ==================================== -->
	
	<!-- 변호사 리스트 조회 (관리자용)  -->
	<entry key="manageSelectLawList">
		SELECT LAW_NO,
		       USER_NAME,
		       PART_NAME,
		       COMPANY_ADDRESS,
		       (SELECT COUNT(*)
		        FROM ACCIDENT A
		        WHERE A.SOLVE = 'Y'
		        AND L.LAW_NO = A.REF_LNO) AS "해결영상수",
		       (SELECT COUNT(*)
		        FROM COUNSEL C
		        WHERE C.ACCEPT = 'Y'
		        AND L.LAW_NO = C.REF_LNO) AS  "상담매칭수",
		       (SELECT ROUND(AVG(LENGTH(STAR)),1)
		        FROM LAW_REVIEW LR
		        JOIN ACCIDENT AC ON (LR.REF_ANO = AC.ACC_NO)
		        WHERE LR.STATUS = 'Y'
		        AND AC.SOLVE = 'Y'
		        AND AC.REF_LNO = L.LAW_NO) AS "리뷰평점"
		        ,LAWYER
		FROM LAW_USER L
		JOIN MEMBER M ON (L.REF_UNO = M.USER_NO)
		JOIN PART_CATEGORY P ON (L.REF_PNO = P.PART_NO)
		WHERE M.STATUS = 'Y'
		ORDER BY LAW_NO DESC
	</entry>
	
	<!-- 조건으로 검색한 변호사 리스트 조회 (관리자용) -->
	<entry key="manageSearchLawList"> <!-- 전체 sort -->
		SELECT LAW_NO,
		       USER_NAME,
		       PART_NAME,
		       COMPANY_ADDRESS,
		       (SELECT COUNT(*)
		        FROM ACCIDENT A
		        WHERE A.SOLVE = 'Y'
		        AND L.LAW_NO = A.REF_LNO) AS "해결영상수",
		       (SELECT COUNT(*)
		        FROM COUNSEL C
		        WHERE C.ACCEPT = 'Y'
		        AND L.LAW_NO = C.REF_LNO) AS  "상담매칭수",
		       (SELECT ROUND(AVG(LENGTH(STAR)),1)
		        FROM LAW_REVIEW LR
		        JOIN ACCIDENT AC ON (LR.REF_ANO = AC.ACC_NO)
		        WHERE LR.STATUS = 'Y'
		        AND AC.SOLVE = 'Y'
		        AND AC.REF_LNO = L.LAW_NO) AS "리뷰평점"
		        ,LAWYER
		FROM LAW_USER L
		JOIN MEMBER M ON (L.REF_UNO = M.USER_NO)
		JOIN PART_CATEGORY P ON (L.REF_PNO = P.PART_NO)
		WHERE M.STATUS = 'Y'
		AND USER_NAME LIKE ?
		AND REF_PNO LIKE ?
		AND COMPANY_ADDRESS LIKE ?
		ORDER BY LAW_NO DESC
	</entry>
	<entry key="manageSearchLawListSolved"> <!-- 해결영상수 -->
		SELECT LAW_NO,
		       USER_NAME,
		       PART_NAME,
		       COMPANY_ADDRESS,
		       (SELECT COUNT(*)
		        FROM ACCIDENT A
		        WHERE A.SOLVE = 'Y'
		        AND L.LAW_NO = A.REF_LNO) AS "해결영상수",
		       (SELECT COUNT(*)
		        FROM COUNSEL C
		        WHERE C.ACCEPT = 'Y'
		        AND L.LAW_NO = C.REF_LNO) AS  "상담매칭수",
		       (SELECT ROUND(AVG(LENGTH(STAR)),1)
		        FROM LAW_REVIEW LR
		        JOIN ACCIDENT AC ON (LR.REF_ANO = AC.ACC_NO)
		        WHERE LR.STATUS = 'Y'
		        AND AC.SOLVE = 'Y'
		        AND AC.REF_LNO = L.LAW_NO) AS "리뷰평점"
		        ,LAWYER
		FROM LAW_USER L
		JOIN MEMBER M ON (L.REF_UNO = M.USER_NO)
		JOIN PART_CATEGORY P ON (L.REF_PNO = P.PART_NO)
		WHERE M.STATUS = 'Y'
		AND USER_NAME LIKE ?
		AND REF_PNO LIKE ?
		AND COMPANY_ADDRESS LIKE ?
		ORDER BY "해결영상수" DESC, LAW_NO DESC
	</entry>
	<entry key="manageSearchLawListMatch"> <!-- 상담매칭수 -->
		SELECT LAW_NO,
		       USER_NAME,
		       PART_NAME,
		       COMPANY_ADDRESS,
		       (SELECT COUNT(*)
		        FROM ACCIDENT A
		        WHERE A.SOLVE = 'Y'
		        AND L.LAW_NO = A.REF_LNO) AS "해결영상수",
		       (SELECT COUNT(*)
		        FROM COUNSEL C
		        WHERE C.ACCEPT = 'Y'
		        AND L.LAW_NO = C.REF_LNO) AS  "상담매칭수",
		       (SELECT ROUND(AVG(LENGTH(STAR)),1)
		        FROM LAW_REVIEW LR
		        JOIN ACCIDENT AC ON (LR.REF_ANO = AC.ACC_NO)
		        WHERE LR.STATUS = 'Y'
		        AND AC.SOLVE = 'Y'
		        AND AC.REF_LNO = L.LAW_NO) AS "리뷰평점"
		        ,LAWYER
		FROM LAW_USER L
		JOIN MEMBER M ON (L.REF_UNO = M.USER_NO)
		JOIN PART_CATEGORY P ON (L.REF_PNO = P.PART_NO)
		WHERE M.STATUS = 'Y'
		AND USER_NAME LIKE ?
		AND REF_PNO LIKE ?
		AND COMPANY_ADDRESS LIKE ?
		ORDER BY "상담매칭수" DESC, LAW_NO DESC
	</entry>
	<entry key="manageSearchLawListAverage"> <!-- 리뷰평점 -->
		SELECT LAW_NO,
		       USER_NAME,
		       PART_NAME,
		       COMPANY_ADDRESS,
		       (SELECT COUNT(*)
		        FROM ACCIDENT A
		        WHERE A.SOLVE = 'Y'
		        AND L.LAW_NO = A.REF_LNO) AS "해결영상수",
		       (SELECT COUNT(*)
		        FROM COUNSEL C
		        WHERE C.ACCEPT = 'Y'
		        AND L.LAW_NO = C.REF_LNO) AS  "상담매칭수",
		       (SELECT ROUND(AVG(LENGTH(STAR)),1)
		        FROM LAW_REVIEW LR
		        JOIN ACCIDENT AC ON (LR.REF_ANO = AC.ACC_NO)
		        WHERE LR.STATUS = 'Y'
		        AND AC.SOLVE = 'Y'
		        AND AC.REF_LNO = L.LAW_NO) AS "리뷰평점"
		        ,LAWYER
		FROM LAW_USER L
		JOIN MEMBER M ON (L.REF_UNO = M.USER_NO)
		JOIN PART_CATEGORY P ON (L.REF_PNO = P.PART_NO)
		WHERE M.STATUS = 'Y'
		AND USER_NAME LIKE ?
		AND REF_PNO LIKE ?
		AND COMPANY_ADDRESS LIKE ?
		ORDER BY "리뷰평점" DESC, LAW_NO DESC
	</entry>
	
	<!-- 변호사 권한 박탈 -->
	<entry key="manageLawLawyerN">
		UPDATE MEMBER
		SET LAWYER = 'N'
		WHERE USER_NO = (SELECT USER_NO
		                 FROM MEMBER M 
		                 JOIN LAW_USER L ON (M.USER_NO = L.REF_UNO)
		                 WHERE LAW_NO = ?)
	</entry>
	
	<!-- 변호사 권한 부여 -->
	<entry key="manageLawLawyerY">
		UPDATE MEMBER
		SET LAWYER = 'Y'
		WHERE USER_NO = (SELECT USER_NO
		                 FROM MEMBER M 
		                 JOIN LAW_USER L ON (M.USER_NO = L.REF_UNO)
		                 WHERE LAW_NO = ?)
	</entry>
	
	<!-- 상담 리스트 조회 (관리자용) -->
	<entry key="selectCounselList">
		SELECT CS_NO,
		       (SELECT USER_NAME
		        FROM MEMBER M
		        WHERE M.USER_NO = L.REF_UNO) AS "LAW_NAME",
		       USER_ID,
		       CS_TITLE,
		       SUBSTR(CS_CONTENT,0,7)||'...' "CS_CONTENT",
		       CREATE_DATE,
		       NVL2(CS_ANSWER,'등록', '미등록') "CS_ANSWER",
		       ACCEPT,
		       C.STATUS
		FROM COUNSEL C
		JOIN LAW_USER L ON (C.REF_LNO = L.LAW_NO)
		JOIN MEMBER M ON (C.CS_WRITER = M.USER_NO)
		WHERE M.STATUS = 'Y'
		ORDER BY CREATE_DATE DESC
	</entry>
	
	<!-- 변호사 번호로 회원번호 조회  (관리자용) -->
	<entry key="selectUserNo">
		SELECT REF_UNO
		FROM LAW_USER
		WHERE LAW_NO = ?
	</entry>
	
</properties>