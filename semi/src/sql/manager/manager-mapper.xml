<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">

<properties>
	<entry key="selectAllAccidentBoard">
   		 SELECT BOARD_NO
		       ,M.USER_ID
		       ,CATEGORY_NO
		       ,TITLE
		       ,COUNT
		       ,B.CREATE_DATE
		       ,AC.REF_PNO
		       ,INSURANCE_TYPE
		       ,REGION
		       ,LIKED
		       ,REPORT_COUNT
		       ,B.STATUS
		       ,PART_NAME
		       ,LM.USER_NAME
		FROM BOARD B
		JOIN MEMBER M ON (BOARD_WRITER = M.USER_NO)
		
		JOIN ACCIDENT AC ON(BOARD_NO=AC.REF_BNO)
		JOIN LAW_USER L ON (L.LAW_NO=REF_LNO)
		JOIN MEMBER LM ON (LM.USER_NO=REF_UNO)
		JOIN PART_CATEGORY ON (AC.REF_PNO = PART_NO)
		WHERE CATEGORY_NO = ?
		ORDER BY B.CREATE_DATE DESC
			
	</entry>
	
	<entry key="sortAccidentBoardByLiked">
	
   		 SELECT BOARD_NO
		       ,M.USER_ID
		       ,CATEGORY_NO
		       ,TITLE
		       ,COUNT
		       ,B.CREATE_DATE
		       ,AC.REF_PNO
		       ,INSURANCE_TYPE
		       ,REGION
		       ,LIKED
		       ,REPORT_COUNT
		       ,B.STATUS
		       ,PART_NAME
		       ,LM.USER_NAME
		FROM BOARD B
		JOIN MEMBER M ON (BOARD_WRITER = M.USER_NO)
		
		JOIN ACCIDENT AC ON(BOARD_NO=AC.REF_BNO)
		JOIN LAW_USER L ON (L.LAW_NO=REF_LNO)
		JOIN MEMBER LM ON (LM.USER_NO=REF_UNO)
		JOIN PART_CATEGORY ON (AC.REF_PNO = PART_NO)
		WHERE CATEGORY_NO = ?
		ORDER BY B.LIKED DESC
	
	</entry>
	
	<entry key="sortAccidentBoardByDislike">
		 SELECT BOARD_NO
		       ,M.USER_ID
		       ,CATEGORY_NO
		       ,TITLE
		       ,COUNT
		       ,B.CREATE_DATE
		       ,AC.REF_PNO
		       ,INSURANCE_TYPE
		       ,REGION
		       ,LIKED
		       ,REPORT_COUNT
		       ,B.STATUS
		       ,PART_NAME
		       ,LM.USER_NAME
		FROM BOARD B
		JOIN MEMBER M ON (BOARD_WRITER = M.USER_NO)
		
		JOIN ACCIDENT AC ON(BOARD_NO=AC.REF_BNO)
		JOIN LAW_USER L ON (L.LAW_NO=REF_LNO)
		JOIN MEMBER LM ON (LM.USER_NO=REF_UNO)
		JOIN PART_CATEGORY ON (AC.REF_PNO = PART_NO)
		WHERE CATEGORY_NO = ?
		ORDER BY B.REPORT_COUNT DESC	
	</entry>
	
	<entry key="sortAccidentBoardByCount">
		 SELECT BOARD_NO
		       ,M.USER_ID
		       ,CATEGORY_NO
		       ,TITLE
		       ,COUNT
		       ,B.CREATE_DATE
		       ,AC.REF_PNO
		       ,INSURANCE_TYPE
		       ,REGION
		       ,LIKED
		       ,REPORT_COUNT
		       ,B.STATUS
		       ,PART_NAME
		       ,LM.USER_NAME
		FROM BOARD B
		JOIN MEMBER M ON (BOARD_WRITER = M.USER_NO)
		
		JOIN ACCIDENT AC ON(BOARD_NO=AC.REF_BNO)
		JOIN LAW_USER L ON (L.LAW_NO=REF_LNO)
		JOIN MEMBER LM ON (LM.USER_NO=REF_UNO)
		JOIN PART_CATEGORY ON (AC.REF_PNO = PART_NO)
		WHERE CATEGORY_NO = ?
		ORDER BY B.COUNT DESC
				
	</entry>

	<entry key="boardStatusOn">
		UPDATE BOARD
		SET STATUS = 'Y'
		WHERE BOARD_NO = ?
		AND STATUS = 'N'
	</entry>
	
	<entry key="boardStatusOff">
		UPDATE BOARD
		SET STATUS = 'N'
		WHERE BOARD_NO = ?
		AND STATUS = 'Y'
	</entry>
	
	<entry key="boardDelete">
		DELETE BOARD
		WHERE BOARD_NO = ?
	</entry>
	
	<entry key="accidentInfoDelete">
		DELETE ACCIDENT
		WHERE REF_BNO = ?
	</entry>
	
	<entry key="attachmentDelete">
		DELETE ATTACHMENT
		WHERE REF_BNO = ?
	</entry>
	
	<entry key="replyDelete">
		DELETE REPLY
		WHERE REF_BNO = ?
	</entry>
	
	<entry key="accidentReviewDelete">
		DELETE ACCI_REVIEW
		WHERE REF_ACCNO = ?
	</entry>
	
	<!-- 삭제처리한 정보까지 불러오기 -->
	<entry key="selectAttachmentForManage">
		SELECT CHANGE_NAME , FILE_PATH , ORIGIN_NAME
		FROM ATTACHMENT
		WHERE REF_BNO = ?
	</entry>
	
	<!-- 삭제된 댓글까지 조회 -->
	<entry key="selectRpListForManage">
		SELECT RP_NO, USER_ID, CONTENT, TO_CHAR(CREATE_DATE, 'YY-MM-DD HH24:MI:SS') "CREATE_DATE"
		FROM REPLY R
		JOIN MEMBER M ON(RP_WRITER = USER_NO)
		WHERE REF_BNO = ?
	</entry>
	
	<!-- 변호사신청 조회 -->
	<entry key="selectApplyLaw">
		SELECT REF_UNO, LAW_NO, USER_NAME, USER_ID, ENROLL_DATE, LAWYER
		FROM LAW_USER
		JOIN MEMBER ON (USER_NO = REF_UNO)
		WHERE STATUS = 'Y'
		ORDER BY ENROLL_DATE DESC
	</entry>
	
	<!-- 전체회원 조회 -->
	<entry key="selectAllMember">
		SELECT USER_NO, USER_ID, USER_NAME, LAWYER, ENROLL_DATE, M.STATUS AS "STATUS",
		        (SELECT COUNT(BOARD_NO)
		        FROM BOARD
		        WHERE BOARD_WRITER = USER_NO) AS "게시글수",
		        (SELECT COUNT(RP_NO)
		        FROM REPLY
		        WHERE RP_WRITER = USER_NO) AS "댓글수"
		FROM MEMBER M
		ORDER BY USER_NO DESC
	</entry>
	
	<entry key="searchAccidentBoardByTitleForManage">
		SELECT BOARD_NO
		       ,M.USER_ID
		       ,CATEGORY_NO
		       ,TITLE
		       ,COUNT
		       ,B.CREATE_DATE
		       ,AC.REF_PNO
		       ,INSURANCE_TYPE
		       ,REGION
		       ,LIKED
		       ,REPORT_COUNT
		       ,B.STATUS
		       ,PART_NAME
		       ,LM.USER_NAME
		FROM BOARD B
		<!-- 작성자 조회 -->		
		JOIN MEMBER M ON (BOARD_WRITER = M.USER_NO)
		
		JOIN ACCIDENT AC ON(BOARD_NO=AC.REF_BNO)
		JOIN LAW_USER L ON (L.LAW_NO=REF_LNO)
		<!-- 담당 변호사 조회 -->
		JOIN MEMBER LM ON (LM.USER_NO=REF_UNO)
		JOIN PART_CATEGORY ON (AC.REF_PNO = PART_NO)
		
		WHERE REGION LIKE ?
		AND AC.REF_PNO LIKE ?
		AND INSURANCE_TYPE LIKE ?
		AND B.TITLE LIKE ? 
		AND CATEGORY_NO = ?
		
		ORDER BY B.CREATE_DATE DESC
	</entry>
	
	<entry key="searchAccidentBoardByWriterForManage">
		SELECT BOARD_NO
		       ,M.USER_ID
		       ,CATEGORY_NO
		       ,TITLE
		       ,COUNT
		       ,B.CREATE_DATE
		       ,AC.REF_PNO
		       ,INSURANCE_TYPE
		       ,REGION
		       ,LIKED
		       ,REPORT_COUNT
		       ,B.STATUS
		       ,PART_NAME
		       ,LM.USER_NAME
		FROM BOARD B
		<!-- 작성자 조회 -->		
		JOIN MEMBER M ON (BOARD_WRITER = M.USER_NO)
		
		JOIN ACCIDENT AC ON(BOARD_NO=AC.REF_BNO)
		JOIN LAW_USER L ON (L.LAW_NO=REF_LNO)
		<!-- 담당 변호사 조회 -->
		JOIN MEMBER LM ON (LM.USER_NO=REF_UNO)
		JOIN PART_CATEGORY ON (AC.REF_PNO = PART_NO)
		
		WHERE REGION LIKE ?
		AND AC.REF_PNO LIKE ?
		AND INSURANCE_TYPE LIKE ?
		AND USER_ID LIKE ? 
		AND CATEGORY_NO = ?
		
		ORDER BY B.CREATE_DATE DESC
	</entry>
	
</properties>