<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">

<properties>
	<entry key="selectAllAccidentBoard">
		SELECT *	
		FROM  (SELECT ROWNUM RNUM,A.*
			   FROM(SELECT BOARD_NO
					       ,M.USER_ID
					       ,CATEGORY_NO
					       ,TITLE
					       ,COUNT
					       ,B.CREATE_DATE
					       ,AC.REF_PNO
					       ,INSURANCE_TYPE
					       ,REGION
					       ,LIKED
					       ,REPORT_COUNT
					       ,B.STATUS
					       ,PART_NAME
					       ,LM.USER_NAME
					FROM BOARD B
					JOIN MEMBER M ON (BOARD_WRITER = M.USER_NO)
					
					JOIN ACCIDENT AC ON(BOARD_NO=AC.REF_BNO)
					JOIN LAW_USER L ON (L.LAW_NO=REF_LNO)
					JOIN MEMBER LM ON (LM.USER_NO=REF_UNO)
					JOIN PART_CATEGORY ON (AC.REF_PNO = PART_NO)
					WHERE CATEGORY_NO = ?
					ORDER BY B.CREATE_DATE DESC)A)
		WHERE RNUM BETWEEN ? AND ?		
	</entry>
	
	<entry key="sortAccidentBoardByLiked">
		SELECT *	
		FROM  (SELECT ROWNUM RNUM,A.*
			   FROM(SELECT BOARD_NO
					       ,M.USER_ID
					       ,CATEGORY_NO
					       ,TITLE
					       ,COUNT
					       ,B.CREATE_DATE
					       ,AC.REF_PNO
					       ,INSURANCE_TYPE
					       ,REGION
					       ,LIKED
					       ,REPORT_COUNT
					       ,B.STATUS
					       ,PART_NAME
					       ,LM.USER_NAME
					FROM BOARD B
					JOIN MEMBER M ON (BOARD_WRITER = M.USER_NO)
					
					JOIN ACCIDENT AC ON(BOARD_NO=AC.REF_BNO)
					JOIN LAW_USER L ON (L.LAW_NO=REF_LNO)
					JOIN MEMBER LM ON (LM.USER_NO=REF_UNO)
					JOIN PART_CATEGORY ON (AC.REF_PNO = PART_NO)
					WHERE CATEGORY_NO = ?
					ORDER BY B.LIKED DESC)A)
		WHERE RNUM BETWEEN ? AND ?		
	</entry>
	
	<entry key="sortAccidentBoardByDislike">
		SELECT *	
		FROM  (SELECT ROWNUM RNUM,A.*
			   FROM(SELECT BOARD_NO
					       ,M.USER_ID
					       ,CATEGORY_NO
					       ,TITLE
					       ,COUNT
					       ,B.CREATE_DATE
					       ,AC.REF_PNO
					       ,INSURANCE_TYPE
					       ,REGION
					       ,LIKED
					       ,REPORT_COUNT
					       ,B.STATUS
					       ,PART_NAME
					       ,LM.USER_NAME
					FROM BOARD B
					JOIN MEMBER M ON (BOARD_WRITER = M.USER_NO)
					
					JOIN ACCIDENT AC ON(BOARD_NO=AC.REF_BNO)
					JOIN LAW_USER L ON (L.LAW_NO=REF_LNO)
					JOIN MEMBER LM ON (LM.USER_NO=REF_UNO)
					JOIN PART_CATEGORY ON (AC.REF_PNO = PART_NO)
					WHERE CATEGORY_NO = ?
					ORDER BY B.REPORT_COUNT DESC)A)
		WHERE RNUM BETWEEN ? AND ?		
	</entry>
	
	<entry key="sortAccidentBoardByCount">
		SELECT *	
		FROM  (SELECT ROWNUM RNUM,A.*
			   FROM(SELECT BOARD_NO
					       ,M.USER_ID
					       ,CATEGORY_NO
					       ,TITLE
					       ,COUNT
					       ,B.CREATE_DATE
					       ,AC.REF_PNO
					       ,INSURANCE_TYPE
					       ,REGION
					       ,LIKED
					       ,REPORT_COUNT
					       ,B.STATUS
					       ,PART_NAME
					       ,LM.USER_NAME
					FROM BOARD B
					JOIN MEMBER M ON (BOARD_WRITER = M.USER_NO)
					
					JOIN ACCIDENT AC ON(BOARD_NO=AC.REF_BNO)
					JOIN LAW_USER L ON (L.LAW_NO=REF_LNO)
					JOIN MEMBER LM ON (LM.USER_NO=REF_UNO)
					JOIN PART_CATEGORY ON (AC.REF_PNO = PART_NO)
					WHERE CATEGORY_NO = ?
					ORDER BY B.COUNT DESC)A)
		WHERE RNUM BETWEEN ? AND ?		
	</entry>

	<entry key="boardStatusOn">
		UPDATE BOARD
		SET STATUS = 'Y'
		WHERE BOARD_NO = ?
		AND STATUS = 'N'
	</entry>
	
	<entry key="boardStatusOff">
		UPDATE BOARD
		SET STATUS = 'N'
		WHERE BOARD_NO = ?
		AND STATUS = 'Y'
	</entry>
	
	<entry key="accidentBoardDelete">
		DELETE BOARD
		WHERE BOARD_NO = ?
	</entry>
	
	<entry key="accidentInfoDelete">
		DELETE ACCIDENT
		WHERE REF_BNO = ?
	</entry>
	
	<entry key="accidentAttachmentDelete">
		DELETE ATTACHMENT
		WHERE REF_BNO = ?
	</entry>
	
	<entry key="accidentReplyDelete">
		DELETE REPLY
		WHERE REF_BNO = ?
	</entry>
	
	<entry key="accidentReviewDelete">
		DELETE ACCI_REVIEW
		WHERE REF_ACCNO = ?
	</entry>
	
	<!-- 삭제처리한 정보까지 불러오기 -->
	<entry key="selectAttachmentForManage">
		SELECT CHANGE_NAME , FILE_PATH , ORIGIN_NAME
		FROM ATTACHMENT
		WHERE REF_BNO = ?
	</entry>
	
	<!-- 삭제된 댓글까지 조회 -->
	<entry key="selectRpListForManage">
		SELECT RP_NO, USER_ID, CONTENT, TO_CHAR(CREATE_DATE, 'YY-MM-DD HH24:MI:SS') "CREATE_DATE"
		FROM REPLY R
		JOIN MEMBER M ON(RP_WRITER = USER_NO)
		WHERE REF_BNO = ?
	</entry>
	
	<!-- 변호사신청 조회 -->
	<entry key="selectApplyLaw">
		SELECT REF_UNO, LAW_NO, USER_NAME, USER_ID, ENROLL_DATE, LAWYER
		FROM LAW_USER
		JOIN MEMBER ON (USER_NO = REF_UNO)
		WHERE STATUS = 'Y'
		ORDER BY ENROLL_DATE DESC
	</entry>
	
	<!-- 전체회원 조회 -->
	<entry key="selectAllMember">
		SELECT USER_NO, USER_ID, USER_NAME, LAWYER, ENROLL_DATE, M.STATUS AS "STATUS",
		        (SELECT COUNT(BOARD_NO)
		        FROM BOARD
		        WHERE BOARD_WRITER = USER_NO) AS "게시글수",
		        (SELECT COUNT(RP_NO)
		        FROM REPLY
		        WHERE RP_WRITER = USER_NO) AS "댓글수"
		FROM MEMBER M
		ORDER BY USER_NO DESC
	</entry>
	
	<!-- 자유게시판 관리 영역 start -->
	<entry key="freeBoardCount">
		SELECT COUNT(BOARD_NO) "COUNT"
		FROM BOARD
		WHERE STATUS = 'Y'
		AND CATEGORY_NO = ? OR CATEGORY_NO = ?
		AND NOTICE = 'N'
	</entry>
	
	<entry key="selectFreeBoardList">
		SELECT BOARD_NO, USER_ID, CATEGORY_NO, TITLE, COUNT, CREATE_DATE, LIKED, REPORT_COUNT, RP_COUNT, B.STATUS "STATUS"
		FROM BOARD B
		JOIN MEMBER M ON(BOARD_WRITER=USER_NO)
		WHERE (CATEGORY_NO = ? OR CATEGORY_NO = ?)
		AND NOTICE = 'N'
		AND B.STATUS = 'Y'
		ORDER BY CREATE_DATE DESC
	</entry>
	
	<entry key="likedFreeBoardList"> <!-- 추천수 정렬 -->
		SELECT BOARD_NO, USER_ID, CATEGORY_NO, TITLE, COUNT, CREATE_DATE, LIKED, REPORT_COUNT, RP_COUNT, B.STATUS "STATUS"
		FROM BOARD B
		JOIN MEMBER M ON(BOARD_WRITER=USER_NO)
		WHERE (CATEGORY_NO = ? OR CATEGORY_NO = ?)
		AND NOTICE = 'N'
		AND B.STATUS = 'Y'
		ORDER BY LIKED DESC, CREATE_DATE DESC
	</entry>
	
	<entry key="reportFreeBoardList"> <!-- 신고수 정렬 -->
		SELECT BOARD_NO, USER_ID, CATEGORY_NO, TITLE, COUNT, CREATE_DATE, LIKED, REPORT_COUNT, RP_COUNT, B.STATUS "STATUS"
		FROM BOARD B
		JOIN MEMBER M ON(BOARD_WRITER=USER_NO)
		WHERE (CATEGORY_NO = ? OR CATEGORY_NO = ?)
		AND NOTICE = 'N'
		AND B.STATUS = 'Y'
		ORDER BY REPORT_COUNT DESC, CREATE_DATE DESC
	</entry>
	
	<entry key="countFreeBoardList"> <!-- 조회수 정렬 -->
		SELECT BOARD_NO, USER_ID, CATEGORY_NO, TITLE, COUNT, CREATE_DATE, LIKED, REPORT_COUNT, RP_COUNT, B.STATUS "STATUS"
		FROM BOARD B
		JOIN MEMBER M ON(BOARD_WRITER=USER_NO)
		WHERE (CATEGORY_NO = ? OR CATEGORY_NO = ?)
		AND NOTICE = 'N'
		AND B.STATUS = 'Y'
		ORDER BY COUNT DESC, CREATE_DATE DESC
	</entry>
	
	<entry key="replyFreeBoardList">
		SELECT BOARD_NO, USER_ID, CATEGORY_NO, TITLE, COUNT, CREATE_DATE, LIKED, REPORT_COUNT, RP_COUNT, B.STATUS "STATUS"
		FROM BOARD B
		JOIN MEMBER M ON(BOARD_WRITER=USER_NO)
		WHERE (CATEGORY_NO = ? OR CATEGORY_NO = ?)
		AND NOTICE = 'N'
		AND B.STATUS = 'Y'
		ORDER BY RP_COUNT DESC, CREATE_DATE DESC
	</entry>
	
	<entry key="selectAt">
		SELECT FILE_NO, CHANGE_NAME
		FROM ATTACHMENT
		WHERE REF_BNO = ? 
	</entry>
	
	<entry key="selectBoard">
		SELECT CATEGORY_NO, LIKED, REPORT_COUNT, RP_COUNT
		FROM BOARD
		WHERE NOTICE = 'N'
		AND (CATEGORY_NO = 1 OR CATEGORY_NO = 2)
		AND BOARD_NO = ?
	</entry>
	
	<entry key="freeBoardAtDelete">
		DELETE FROM ATTACHMENT
		WHERE REF_BNO = ? 
	</entry>
	
	<entry key="freeBoardRpDelete">
		DELETE FROM REPLY
		WHERE REF_BNO = ?
	</entry>
	
	<entry key="freeBoardLikedDelete">
		DELETE FROM LIKED
		WHERE REF_BNO = ?
	</entry>
	
	<entry key="freeBoardReportDelete">
		DELETE FROM DISLIKE
		WHERE REF_BNO = ?
	</entry>
	
	<entry key="freeBoardDelete">
		DELETE FROM BOARD
		WHERE BOARD_NO = ?
	</entry>
	
	<entry key="selectFreeBoardNoticeList">
		SELECT BOARD_NO, USER_ID, CATEGORY_NO, TITLE, COUNT, CREATE_DATE, LIKED, REPORT_COUNT, RP_COUNT, B.STATUS "STATUS"
		FROM BOARD B
		JOIN MEMBER M ON(BOARD_WRITER=USER_NO)
		WHERE CATEGORY_NO = 1
		AND NOTICE = 'Y'
		ORDER BY RP_COUNT DESC, CREATE_DATE DESC
	</entry>
	
	<entry key="selectFreeDWBoardList"> <!-- 삭제 대기 게시글 조회 -->
		SELECT BOARD_NO, USER_ID, CATEGORY_NO, TITLE, COUNT, CREATE_DATE, LIKED, REPORT_COUNT, RP_COUNT, B.STATUS "STATUS"
		FROM BOARD B
		JOIN MEMBER M ON(BOARD_WRITER=USER_NO)
		WHERE (CATEGORY_NO = ? OR CATEGORY_NO = ?)
		AND NOTICE = 'N'
		AND B.STATUS = 'N'
		ORDER BY CREATE_DATE DESC
	</entry>
	
	<entry key="recentDeldList"><!-- 최신순 삭제대기 게시글 조회 -->
		SELECT BOARD_NO, USER_ID, CATEGORY_NO, TITLE, COUNT, CREATE_DATE, LIKED, REPORT_COUNT, RP_COUNT, B.STATUS "STATUS"
		FROM BOARD B
		JOIN MEMBER M ON(BOARD_WRITER=USER_NO)
		WHERE (CATEGORY_NO = ? OR CATEGORY_NO = ?)
		AND NOTICE = 'N'
		AND B.STATUS = 'N'
		ORDER BY CREATE_DATE DESC
	</entry>
	
	<entry key="oldDelList">
		SELECT BOARD_NO, USER_ID, CATEGORY_NO, TITLE, COUNT, CREATE_DATE, LIKED, REPORT_COUNT, RP_COUNT, B.STATUS "STATUS"
		FROM BOARD B
		JOIN MEMBER M ON(BOARD_WRITER=USER_NO)
		WHERE (CATEGORY_NO = ? OR CATEGORY_NO = ?)
		AND NOTICE = 'N'
		AND B.STATUS = 'N'
		ORDER BY CREATE_DATE ASC
	</entry>
	<!-- 자유게시판 관리 영역 end -->
</properties>